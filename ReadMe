**Task 1: CV Parser

Your resume/CV in JSON format and a parser for the resume so it can be displayed.

**Task 2: Tic-tac-toe

Write a tic-tac-toe app that never loses on a 3x3 board.

The app will have a computer player and a human player. The computer player should always play the best move and never lose.



**Task 3: URL shortner

Write a URL shortener app.

The app needs to be on the web and needs to use a database (any kind: relational, non-relational, file-based, etc). Please don’t use online services like bitly or tinyurl; that’s not the point of this exercise. When crafting your solution, take note of the following:
if the app becomes famous and you have 10,000 people trying to shorten urls every minute, what would the bottlenecks be?

Stack Used:

- Django backend with Python-2.7
- Ubuntu 16.04 server
- Angular-SPA for frontend
- REST backend
- uWSGI for application server
- nGinx for reverse proxy and static files serving
- Git-flow used for version control
- Bash scripts for deployment (to be replaced by ansible)

